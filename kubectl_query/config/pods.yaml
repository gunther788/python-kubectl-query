---

tables:

  pods-metrics:
    note: Pods with Metrics
    api: metrics.k8s.io/v1beta1
    kind: PodMetrics
    fields:
      namespace: "$.metadata.namespace"
      pod: "$.metadata.name"
      containers:
        container: "$.containers[*].name"
        usagecpu: "$.containers[*].usage.cpu.`sub(/([0-9]+)[0-9]{6}n/, \\\\1)`"
        usagemem: "$.containers[*].usage.memory.`sub(/([0-9]+){3}Ki/, \\\\1)`"

  pods-nodes:
    note: Pods with nodes
    api: v1
    kind: Pod
    fields:
      namespace: "$.metadata.namespace"
      pod: "$.metadata.name"
      node: "$.spec.nodeName"

  pods-addresses:
    note: Pods with adresses and status
    api: v1
    kind: Pod
    fields:
      namespace: "$.metadata.namespace"
      pod: "$.metadata.name"
      node: "$.spec.nodeName"
      podip: "$.status.podIPs[*].ip"
      podphase: "$.status.phase"

  pods-images:
    note: Pods and their Containers
    api: v1
    kind: Pod
    fields:
      namespace: "$.metadata.namespace"
      pod: "$.metadata.name"
      node: "$.spec.nodeName"
      containers:
        container: "$.spec.containers[*].name"
        image: "$.spec.containers[*].image"

  pods-pvcs:
    note: Pods with PVCs
    api: v1
    kind: Pod
    fields:
      namespace: "$.metadata.namespace"
      pod: "$.metadata.name"
      node: "$.spec.nodeName"
      pvc: "$.spec.volumes[*].persistentVolumeClaim.claimName"

  pods-ports:
    note: Pods with Node and containerPort
    api: v1
    kind: Pod
    fields:
      namespace: "$.metadata.namespace"
      pod: "$.metadata.name"
      node: "$.spec.nodeName"
      podip: "$.status.podIPs[*].ip"
      port: "$.spec.containers[*].ports[*].containerPort"

  pods-affinity-tolerations:
    note: Pods with affinity and tolerations
    aliases:
      - pat
    api: v1
    kind: Pod
    fields:
      namespace: "$.metadata.namespace"
      pod: "$.metadata.name"
      tolerations:
        zone: "$.spec.tolerations[?key='topology.kubernetes.io/zone'].value"
      affinity: "$.spec.affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms[*]"

  pods-terminated-status:
    note: Pods with container statuses
    api: v1
    kind: Pod
    fields:
      namespace: "$.metadata.namespace"
      pod: "$.metadata.name"
      containerstatus:
        container: "$.status.containerStatuses[*].name"
        finished: "$.status.containerStatuses[*].lastState.terminated.finishedAt"
        reason: "$.status.containerStatuses[*].lastState.terminated.reason"

queries:

  pods-topology:
    aliases:
      - pt
    note: Pods with various Topology-related attributes
    sort:
      - zone
      - namespace
      - pod
    tables:
      - pods-addresses
      - pods-affinity-tolerations

  pods-oomkilled:
    note: Pods that were OOM Killed
    tables:
      - pods-terminated-status
    filters:
      - "reason=OOMKilled"

  pods-nodes-images:
    note: Pods with Nodes and Images
    aliases:
      - pni
    sort:
      - node
      - namespace
      - pod
    tables:
      - nodes-specs
      - pods-images

  pods-nodes-metrics:
    note: Pods with Nodes and Metrics
    aliases:
      - pnm
    sort:
      - usagecpu
    tables:
      - pods-metrics
      - pods-nodes
      - nodes-metrics

  pods-nodes-storage:
    note: Pods with Nodes and Storage
    aliases:
      - pns
    sort:
      - zone
      - namespace
      - pod
    tables:
      - pods-addresses
      - nodes-ips
      - nodes-topology-labels
      - pods-pvcs
      - pvcs
      - pvs
